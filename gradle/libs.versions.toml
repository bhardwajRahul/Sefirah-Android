[versions]
# Gradle and Kotlin
agp = "8.8.2"
kotlin = "2.1.0"
ksp = "2.1.0-1.0.29"
jetbrainsKotlinJvm = "2.1.0"
androidDesugarJdkLibs = "2.1.3"
smsmms = "kdeconnect-1-21-0"

commonsCollections4 = "4.4"
commonsIo = "2.18.0"
commonsLang3 = "3.17.0"
# AndroidX
coreKtx = "1.15.0"
lifecycleRuntimeKtx = "2.8.7"
appcompat = "1.7.0"
logger = "1.0.3"
splashscreen = "1.0.1"
navigation = "2.8.5"
datastore = "1.1.1"
work = "2.10.0"
media = "1.7.0"
media3 = "1.5.1"

# Room
room = "2.6.1"

# Compose
composeBom = "2024.12.01"
composeActivity = "1.9.3"
composeUi = "1.7.6"
composeCoil = "2.6.0"
material3 = "1.3.1"

# Dependency Injection
hilt = "2.53.1"
hiltAndroidx = "1.2.0"

richtext = "0.20.0"

# Networking
ktor = "2.3.13"
minaCore = "2.2.3"
sshdCore = "2.14.0"
okhttp = "2.5.0"

# Security
bcpkixJdk18on = "1.79"

# Kotlin Extensions
kotlinxCoroutines = "1.9.0"
kotlinxSerializationJson = "1.7.3"
kotlinxImmutables = "0.3.8"

# Testing
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"

# Material Design
material = "1.12.0"
documentfile = "1.0.1"
firebaseCrashlyticsBuildtools = "3.0.3"


[libraries]
commons-io = { module = "commons-io:commons-io", version.ref = "commonsIo" }
commons-collections4 = { module = "org.apache.commons:commons-collections4", version.ref = "commonsCollections4" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
android-smsmms = { module = "org.kde.invent.sredman:android-smsmms", version.ref="smsmms"}

# AndroidX
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
klinkerapps-logger = { module = "com.klinkerapps:logger", version.ref = "logger" }
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

# AndroidX Components
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-work = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }
androidx-media = { module = "androidx.media:media", version.ref = "media" }
androidx-media3-session = { group = "androidx.media3", name = "media3-session", version.ref = "media3" }

# Room Database
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "room" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "composeActivity" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeUi" }
foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeUi" }
animation = { module = "androidx.compose.animation:animation", version.ref = "composeUi" }
animation-graphics = { module = "androidx.compose.animation:animation-graphics", version.ref = "composeUi" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeUi" }
runtime = { module = "androidx.compose.runtime:runtime", version.ref = "composeUi" }
ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
ui-util = { module = "androidx.compose.ui:ui-util" }
compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeUi" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeUi" }
material3-core = { module = "androidx.compose.material3:material3", version.ref = "material3" }
material-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "composeUi" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "composeCoil" }

# Dependency Injection
androidx-hilt-common = { group = "androidx.hilt", name = "hilt-common", version.ref = "hiltAndroidx" }
androidx-hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltAndroidx" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltAndroidx" }
hilt-androidx-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltAndroidx" }

# Networking - SSH
apache-mina-core = { module = "org.apache.mina:mina-core", version.ref = "minaCore" }
apache-sshd-core = { module = "org.apache.sshd:sshd-core", version.ref = "sshdCore" }
apache-sshd-sftp = { module = "org.apache.sshd:sshd-sftp", version.ref = "sshdCore" }
apache-sshd-scp = { module = "org.apache.sshd:sshd-scp", version.ref = "sshdCore" }
apache-sshd-mina = { module = "org.apache.sshd:sshd-mina", version.ref = "sshdCore" }

# Networking - Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# OkHttp
squareup-okhttp = { module = "com.squareup.okhttp:okhttp", version.ref = "okhttp"}
squareup-okhttp-urlconnection = { module = "com.squareup.okhttp:okhttp-urlconnection", version.ref = "okhttp"}

# Security
bcpkix-jdk18on = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bcpkixJdk18on" }

# Kotlin Extensions
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-immutables = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "kotlinxImmutables" }

# Material Design
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


richtext-commonmark = { module = "com.halilibo.compose-richtext:richtext-commonmark", version.ref = "richtext" }
richtext-m3 = { module = "com.halilibo.compose-richtext:richtext-ui-material3", version.ref = "richtext" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

# Gradle Plugins
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
androidx-documentfile = { group = "androidx.documentfile", name = "documentfile", version.ref = "documentfile" }
firebase-crashlytics-buildtools = { group = "com.google.firebase", name = "firebase-crashlytics-buildtools", version.ref = "firebaseCrashlyticsBuildtools" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }

# Custom project plugins
sefirah-android-application = { id = "sefirah.android.application", version = "unspecified" }
sefirah-android-library = { id = "sefirah.android.library", version = "unspecified" }
sefirah-jvm-library = { id = "sefirah.jvm.library", version = "unspecified" }

[bundles]
compose-android = [
    "activity-compose", "foundation", "animation", "animation-graphics",
    "compose-ui", "material3-core", "material-icons", "ui-tooling-preview"
]

ktor = [
    "ktor-client-core", "ktor-client-okhttp", "ktor-client-logging", "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json", "ktor-client-cio", "ktor-server-core", "ktor-server-cio"
]
